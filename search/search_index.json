{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Crafting a digital grammar","text":"<p>This is a guide with specific steps on how to create a digital grammar. The method combines a CLDF dataset with prose written in markdown; the latter contains references to the former.</p>"},{"location":"data/","title":"Creating a dataset","text":""},{"location":"data/#export-your-data","title":"Export your data","text":"<ol> <li>export your FLEx text database as <code>.flextext</code>[^1] (into this folder)</li> <li>export your FLEx lexicon as <code>.lift</code>[^2] (into this folder)</li> </ol>"},{"location":"data/#create-a-cldf-version-of-your-corpus","title":"Create a CLDF version of your corpus","text":"<p>Use <code>cldflex</code> to transform the contents of your <code>.flextext</code> and <code>.lift</code> files to a CLDF dataset (<code>make cldflex</code>):[^3]</p> <pre><code>`cldflex flex2csv &lt;filename&gt;.flextext --lexicon &lt;filename&gt;.lift --cldf`\n</code></pre>"},{"location":"deploy/","title":"Distributing","text":""},{"location":"deploy/#set-up-a-clld-app","title":"Set up a CLLD app","text":"<ol> <li>download this repo into this folder and install it:</li> </ol> <pre><code>pip install -e indicogram\n</code></pre> <ol> <li>build the <code>clld</code> database and serve it (<code>make clld</code>):</li> </ol> <pre><code>cd indicogram\nclld initdb development.ini --cldf ../your-grammar/output/cldf/metadata.json\npserve --reload development.ini\n</code></pre> <ol> <li>view the app in your webbroser at <code>localhost:6543</code></li> </ol>"},{"location":"deploy/#3-common-problems","title":"3 Common problems","text":"<p>Problems will be listed here.</p> <p>[^1]: Navigate to <code>Text &amp; Words &gt; Interlinear Texts</code>, open the <code>Analyzed</code> tab, use the menu <code>File &gt; Export Interlinear...</code> and choose the first option (\"ELAN, SayMore, FLEx\"). You can include one or multiple texts. [^2]: Navigate to <code>Lexicon</code>, use the menu <code>File &gt; Export...</code> and choose the option \"Full Lexicon (LIFT 0.13 XML)\". [^3]: Depending on the setup of your FLEx database, this will throw all sorts of warnings at you and complain about inconsistencies. You can fix them in your database, but things should largely work even if you ignore them. If you think a particular warning is inaccurate, open an issue here.</p>"},{"location":"faq/","title":"FAQ","text":""},{"location":"pld/","title":"Writing","text":""},{"location":"pld/#16-create-a-pylingdocs-project-based-on-that-cldf-dataset","title":"1.6 Create a pylingdocs project based on that CLDF dataset","text":"<ol> <li>create a pylingdocs project (the Makefile looks for an ID ending in <code>grammar</code>!)</li> </ol> <pre><code>pylingdocs new\n</code></pre> <p>You will be asked some project setup prompts; the crucial one asks for the location of your CLDF dataset. If you followed the instructions so far, the default (<code>cldf/metadata.json</code>) should work; otherwise, enter the path to your dataset.</p> <ol> <li>(optional) write stuff! (how to use pylingdocs)</li> <li>create another CLDF dataset combining data and description (<code>make pylingdocs</code>):</li> </ol> <pre><code>cd your-grammar; pylingdocs cldf\n</code></pre>"},{"location":"pld/#13-set-up-software-dependencies","title":"1.3 Set up software dependencies","text":"<p>Install the python packages needed for the next two steps (<code>make install</code>):</p> <pre><code>pip install -r requirements.txt\n</code></pre>"},{"location":"pld/#14-set-up-the-glottolog-catalog","title":"1.4 Set up the glottolog catalog","text":"<p>If you want to follow this tutorial to the letter, you will need to download the glottolog catalog with <code>cldfbench</code> so that language metadata can be looked up. To do so, run the following command and say <code>y</code> to installing the glottolog catalog (<code>make glottolog</code>). <code>cldfbench</code> will tell you where the catalog is stored so you can delete it if you don't want to keep it.</p> <pre><code>cldfbench catconfig\n</code></pre> <p>Alternatively, you can provide a <code>languages.csv</code> file to <code>cldflex</code> (minimal example).</p> <p>Note that you can also create a CLDF dataset in some other way, e.g. by using <code>cldfbench</code>, or you can work with an existing dataset.</p>"},{"location":"start/","title":"Getting started","text":""},{"location":"start/#requirements","title":"Requirements","text":"<ul> <li>knowledge prerequisites: basic command line literacy (this tutorial by Johannes Englisch or this LaunchSchool book may help)</li> <li>software prerequisites:<ul> <li>a working python 3.7+ installation (try <code>python --version</code> and <code>python3 --version</code> first)</li> <li>git</li> <li>system-specific:<ul> <li>macOS: running <code>git</code> might ask you to install the Xcode Command Line Tools</li> <li>Windows: ?</li> <li>Linux: you should be fine</li> </ul> </li> <li>optional: Pandoc if you want to use <code>pylingdocs</code> for output formats other than a CLLD app</li> </ul> </li> </ul>"},{"location":"start/#preliminaries","title":"Preliminaries","text":"<p>It is highly recommended that you create a virtual environment and then run all parts of this tutorial in that environment:</p> <pre><code>python -m venv env\nsource env/bin/activate\n</code></pre>"},{"location":"start/#running-into-problems","title":"Running into problems?","text":"<ol> <li>please check first if your case is covered in common problems. If this does not solve your problem, continue.</li> <li>if it's evident that the error comes from one of the used python packages (cldflex, pylingdocs, indicogram): click the respective link and open an issue. Otherwise, continue.</li> <li>open an issue here.</li> </ol> <p>(If you don't have usable FLEx data, the <code>cldflex</code> repo contains example flextext and lift files that you can use [<code>make demofiles</code>])</p>"}]}